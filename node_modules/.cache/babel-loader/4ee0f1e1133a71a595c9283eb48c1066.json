{"ast":null,"code":"var _jsxFileName = \"E:\\\\Thulasy\\\\project_live_workspace\\\\Myntinvest\\\\src\\\\components\\\\sections\\\\Analystics.js\";\nimport React from \"react\";\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel } from 'react-accessible-accordion'; // Demo styles, see 'Styles' section below for some notes on use.\n\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport classNames from 'classnames';\nimport { SectionSplitProps } from '../../utils/SectionProps';\nimport SectionHeader from './partials/SectionHeader';\nimport Button from \"../elements/Button\";\nconst propTypes = { ...SectionSplitProps.types\n};\nconst defaultProps = { ...SectionSplitProps.defaults\n};\n\nconst Analystics = ({\n  className,\n  topOuterDivider,\n  bottomOuterDivider,\n  topDivider,\n  bottomDivider,\n  hasBgColor,\n  invertColor,\n  invertMobile,\n  invertDesktop,\n  alignTop,\n  imageFill,\n  ...props\n}) => {\n  const outerClasses = classNames('features-split section', topOuterDivider && 'has-top-divider', bottomOuterDivider && 'has-bottom-divider', hasBgColor && 'has-bg-color', invertColor && 'invert-color', className);\n  const innerClasses = classNames('features-split-inner section-inner', topDivider && 'has-top-divider', bottomDivider && 'has-bottom-divider');\n  const sectionHeader = {\n    title: '',\n    paragraph: ''\n  };\n  return /*#__PURE__*/React.createElement(\"section\", Object.assign({}, props, {\n    className: outerClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }));\n};\n\nAnalystics.propTypes = propTypes;\nAnalystics.defaultProps = defaultProps;\nexport default Analystics;","map":{"version":3,"sources":["E:/Thulasy/project_live_workspace/Myntinvest/src/components/sections/Analystics.js"],"names":["React","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","classNames","SectionSplitProps","SectionHeader","Button","propTypes","types","defaultProps","defaults","Analystics","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","invertMobile","invertDesktop","alignTop","imageFill","props","outerClasses","innerClasses","sectionHeader","title","paragraph"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,oBAHF,EAIEC,mBAJF,EAKEC,kBALF,QAMO,4BANP,C,CAQA;;AACA,OAAO,mDAAP;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,MAAMC,SAAS,GAAG,EACd,GAAGH,iBAAiB,CAACI;AADP,CAAlB;AAIE,MAAMC,YAAY,GAAG,EACnB,GAAGL,iBAAiB,CAACM;AADF,CAArB;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,SADkB;AAElBC,EAAAA,eAFkB;AAGlBC,EAAAA,kBAHkB;AAIlBC,EAAAA,UAJkB;AAKlBC,EAAAA,aALkB;AAMlBC,EAAAA,UANkB;AAOlBC,EAAAA,WAPkB;AAQlBC,EAAAA,YARkB;AASlBC,EAAAA,aATkB;AAUlBC,EAAAA,QAVkB;AAWlBC,EAAAA,SAXkB;AAYlB,KAAGC;AAZe,CAAD,KAab;AAEJ,QAAMC,YAAY,GAAGrB,UAAU,CAC7B,wBAD6B,EAE7BU,eAAe,IAAI,iBAFU,EAG7BC,kBAAkB,IAAI,oBAHO,EAI7BG,UAAU,IAAI,cAJe,EAK7BC,WAAW,IAAI,cALc,EAM7BN,SAN6B,CAA/B;AASA,QAAMa,YAAY,GAAGtB,UAAU,CAC7B,oCAD6B,EAE7BY,UAAU,IAAI,iBAFe,EAG7BC,aAAa,IAAI,oBAHY,CAA/B;AAMA,QAAMU,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,EADa;AAEpBC,IAAAA,SAAS,EAAE;AAFS,GAAtB;AAKA,sBACI,iDACIL,KADJ;AAEA,IAAA,SAAS,EAAEC,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAQH,CA3CC;;AA6CFb,UAAU,CAAEJ,SAAZ,GAAwBA,SAAxB;AACAI,UAAU,CAAEF,YAAZ,GAA2BA,YAA3B;AAEA,eAAeE,UAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionItemHeading,\r\n  AccordionItemButton,\r\n  AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\n\r\n// Demo styles, see 'Styles' section below for some notes on use.\r\nimport 'react-accessible-accordion/dist/fancy-example.css';\r\n\r\nimport classNames from 'classnames';\r\nimport { SectionSplitProps } from '../../utils/SectionProps';\r\nimport SectionHeader from './partials/SectionHeader';\r\nimport Button from \"../elements/Button\";\r\n\r\nconst propTypes = {\r\n    ...SectionSplitProps.types\r\n  }\r\n  \r\n  const defaultProps = {\r\n    ...SectionSplitProps.defaults\r\n  }\r\n  \r\n  const Analystics = ({\r\n    className,\r\n    topOuterDivider,\r\n    bottomOuterDivider,\r\n    topDivider,\r\n    bottomDivider,\r\n    hasBgColor,\r\n    invertColor,\r\n    invertMobile,\r\n    invertDesktop,\r\n    alignTop,\r\n    imageFill,\r\n    ...props\r\n  }) => {\r\n  \r\n    const outerClasses = classNames(\r\n      'features-split section',\r\n      topOuterDivider && 'has-top-divider',\r\n      bottomOuterDivider && 'has-bottom-divider',\r\n      hasBgColor && 'has-bg-color',\r\n      invertColor && 'invert-color',\r\n      className\r\n    );\r\n  \r\n    const innerClasses = classNames(\r\n      'features-split-inner section-inner',\r\n      topDivider && 'has-top-divider',\r\n      bottomDivider && 'has-bottom-divider' \r\n    );\r\n  \r\n    const sectionHeader = {\r\n      title: '',\r\n      paragraph: ''\r\n    };\r\n\r\n    return (\r\n        <section\r\n        {...props}\r\n        className={outerClasses}\r\n      >\r\n        \r\n    </section>\r\n);\r\n}\r\n\r\nAnalystics .propTypes = propTypes;\r\nAnalystics .defaultProps = defaultProps;\r\n\r\nexport default Analystics ;"]},"metadata":{},"sourceType":"module"}